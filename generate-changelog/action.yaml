name: generate-changelog
description: ""

inputs:
  git-cliff-args:
    description: ""
    required: false
    default: --current
  git-cliff-config:
    description: ""
    required: false
    default: ${GITHUB_ACTION_PATH}/../cliff.toml
  trim-version-and-date:
    description: ""
    required: false
    default: "true"
  save-json-output:
    description: ""
    required: false
    default: false

outputs:
  changelog:
    description: ""
    value: ${{ steps.generate-changelog.outputs.changelog }}

runs:
  using: composite
  steps:
    - name: Set up git-cliff
      uses: kenji-miyake/setup-git-cliff@v1
      with:
        version: 0.10.0

    - name: Generate changelog MD
      id: generate-changelog-md
      shell: bash
      if: ${{ inputs.save-json-output == 'false' }}
      run: |
        # Generate changelog
        git cliff --output CHANGELOG.md --config ${{ inputs.git-cliff-config }} \
          -vv --strip all ${{ inputs.git-cliff-args }}
        r=$(cat CHANGELOG.md)
        # rm CHANGELOG.md
        # Trim version and date
        if [ "${{ inputs.trim-version-and-date }}" = "true" ]; then
          r="$(printf "$r" | tail -n +3)"
        fi
        # Workaround for https://github.community/t/set-output-truncates-multiline-strings/16852
        delimiter="$(openssl rand -hex 8)"
        echo "changelog<<${delimiter}" >> "${GITHUB_OUTPUT}"
        echo $r >> "${GITHUB_OUTPUT}"
        echo "${delimiter}" >> "${GITHUB_OUTPUT}"

    - name: Generate changelog JSON
      id: generate-changelog-json
      shell: bash
      if: ${{ inputs.save-json-output == 'true' }}
      run: |
        git cliff --config ${{ inputs.git-cliff-config }} \
          -vv --strip all ${{ inputs.git-cliff-args }} --context --output context.json 
        # cat context.json | jq .[].commits | jq .[] | jq -s . | jq 'map({id: .id, type: .group, scope: .scope, title: .message, link: .links[0].href})' > context.json

        # Workaround for https://github.community/t/set-output-truncates-multiline-strings/16852
        delimiter="$(openssl rand -hex 8)"
        echo "changelog<<${delimiter}" >> "${GITHUB_OUTPUT}"
        echo $r | sed "s/'//" >> "${GITHUB_OUTPUT}"
        echo "${delimiter}" >> "${GITHUB_OUTPUT}"

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        architecture: 'x64'
    # - name: Install dependencies
    #   run: pip install -r requirements.txt
    - name: Run Python
      shell: bash
      run: |
        pip install ijson
        python "${GITHUB_ACTION_PATH}"/edit-json-file.py
    # - uses: actions/checkout@v3
    #   with: 
    #     ref: json

    # - name: Crate dummy file
    #   shell: bash
    #   run: |
    #     if [ ! -e release_context.json ]; then
    #       echo "[]" >  release_context.json
    #     fi

    # - name: Set up node
    #   uses: actions/setup-node@v3
    #   id: setup_node_id
    #   with:
    #     node-version: latest

    # - name: Load json
    #   shell: bash
    #   run: |
    #     npm install -g json-diff
    #     echo "------------------"
    #     cat release_context.json
    #     echo "------------------"
    #     #echo "$CHANGELOG_JSON" > tmp.json
    #     echo "[]" > tmp.json
    #     cat tmp.json
    #     echo "------------------"
    #     json-diff -nj release_context.json tmp.json | awk '{print substr($0, 3)}'  | sed '/"+"/d' | sed '/"~"/d' | sed '/"-"/d' | sed '/^$/d' > release_context.json
    #     #json-diff -nj release_context.json <(echo "$CHANGELOG_JSON") | awk '{print substr($0, 3)}'  | sed '/"+"/d' | sed '/"~"/d' | sed '/"-"/d' | sed '/^$/d' > release_context.json
    #     cat release_context.json
    #   env:
    #       CHANGELOG_JSON: ${{ steps.generate-changelog-json.outputs.changelog }}

    # - name: Commit
    #   uses: EndBug/add-and-commit@v9
    #   with:
    #     message: 'feat: edit release json'
    #     add: 'release_context.json --force'
  
    # - name: Generate json file
    #   uses: jsdaniell/create-json@1.1.2
    #   with:
    #     name: context.json
    #     json: ${{ steps.generate-changelog.outputs.changelog }}

    # - name: Commit
    #   uses: EndBug/add-and-commit@v9
    #   with:
    #     message: 'feat: edit release json'
    #     add: 'context.json --force'
       
    # - name: Show result
    #   run: |
    #     if [ "${{ inputs.save-json-output }}" = "true" ]; then
    #       echo "$CHANGELOG_JSON"
    #     fi
    #     if [ "${{ inputs.save-json-output }}" = "false" ]; then
    #       echo "$CHANGELOG"
    #     fi
    #   env:
    #       CHANGELOG: ${{ steps.generate-changelog-md.outputs.changelog }}
    #       CHANGELOG_JSON: ${{ steps.generate-changelog-json.outputs.changelog }}
    #   shell: bash
