name: generate-changelog
description: ""

inputs:
  git-cliff-args:
    description: ""
    required: false
    default: --current
  git-cliff-config:
    description: ""
    required: false
    default: ${GITHUB_ACTION_PATH}/../cliff.toml
  trim-version-and-date:
    description: ""
    required: false
    default: "true"
  save-json-output:
    description: ""
    required: false
    default: false

outputs:
  changelog:
    description: ""
    value: ${{ steps.generate-changelog.outputs.changelog }}

runs:
  using: composite
  steps:
    - name: Set up git-cliff
      uses: kenji-miyake/setup-git-cliff@v1

    - name: Generate changelog
      id: generate-changelog
      shell: bash
      run: |
        if [ ! inputs.save-json-output ]; then
          # Generate changelog
          git cliff --output CHANGELOG.md --config ${{ inputs.git-cliff-config }} \
            -vv --strip all ${{ inputs.git-cliff-args }}
          r=$(cat CHANGELOG.md)
          rm CHANGELOG.md
          # Trim version and date
          if ["${{ inputs.trim-version-and-date }}" = "true" ]; then
            r="$(printf "$r" | tail -n +3)"
          fi
          # Workaround for https://github.community/t/set-output-truncates-multiline-strings/16852
          delimiter="$(openssl rand -hex 8)"
          echo "changelog<<${delimiter}" >> "${GITHUB_OUTPUT}"
          echo $r >> "${GITHUB_OUTPUT}"
          echo "${delimiter}" >> "${GITHUB_OUTPUT}"
        fi

        if [ inputs.save-json-output ]; then
          git cliff --config ${{ inputs.git-cliff-config }} \
            -vv --strip all ${{ inputs.git-cliff-args }} --context --output context.json
          r=$(cat context.json)

          # Workaround for https://github.community/t/set-output-truncates-multiline-strings/16852
          delimiter="$(openssl rand -hex 8)"
          echo "changelog<<${delimiter}" >> "${GITHUB_OUTPUT}"
          echo $r >> "${GITHUB_OUTPUT}"
          echo "${delimiter}" >> "${GITHUB_OUTPUT}"
        fi

    - name: Generate json file
      uses: jsdaniell/create-json@1.1.2
      with:
        name: context.json
        json: ${{ steps.generate-changelog.outputs.changelog }}
 
    #- name: Show result
    #  run: |
    #    echo "$CHANGELOG"
    #  env:
    #    CHANGELOG: ${{ steps.generate-changelog.outputs.changelog }}
    #  shell: bash

