name: generate-changelog
description: ""

inputs:
  git-cliff-args:
    description: ""
    required: false
    default: --current
  git-cliff-config:
    description: ""
    required: false
    default: ${GITHUB_ACTION_PATH}/../cliff.toml
  trim-version-and-date:
    description: ""
    required: false
    default: "true"
  save-json-output:
    description: ""
    required: false
    default: false

outputs:
  changelog:
    description: ""
    value: ${{ steps.generate-changelog.outputs.changelog }}

runs:
  using: composite
  steps:
    - name: Set up git-cliff
      uses: kenji-miyake/setup-git-cliff@v1.1.0
      with:
        version: 1.1.2

    - name: Generate changelog
      id: generate-changelog
      shell: bash
      if: ${{ inputs.save-json-output == 'false' }}
      run: |
        # Generate changelog
        git cliff --output CHANGELOG.md --config ${{ inputs.git-cliff-config }} \
          -vv --strip header ${{ inputs.git-cliff-args }}
        r=$(cat CHANGELOG.md)
        rm CHANGELOG.md

        # Trim version and date
        if [ "${{ inputs.trim-version-and-date }}" = "true" ]; then
          r="$(printf "$r" | tail -n +3)"
        fi

        delimiter="$(openssl rand -hex 8)"
        echo "changelog<<${delimiter}" >> "${GITHUB_OUTPUT}"
        echo $r >> "${GITHUB_OUTPUT}"
        echo "${delimiter}" >> "${GITHUB_OUTPUT}"

    - name: Show result
      shell: bash
      if: ${{ inputs.save-json-output == 'false' }}
      run: |
        echo "$CHANGELOG"
      env:
        CHANGELOG: ${{ steps.generate-changelog.outputs.changelog }}

    - name: Generate changelog JSON
      id: generate-changelog-json
      shell: bash
      if: ${{ inputs.save-json-output == 'true' }}
      run: |
        git cliff --config ${{ inputs.git-cliff-config }} \
          -vv --strip all ${{ inputs.git-cliff-args }} --context --output context.json 

        delimiter="$(openssl rand -hex 8)"
        echo "changelog<<${delimiter}" >> "${GITHUB_OUTPUT}"
        echo $r | sed "s/'//" >> "${GITHUB_OUTPUT}"
        echo "${delimiter}" >> "${GITHUB_OUTPUT}"
